[project]
name = "pyfusion"
version = "2.0.5"

description = "JPMC Fusion Developer Tools"
authors = [
    { name = "FusionDevs", email = "fusion_developers@jpmorgan.com" }
]
readme = "README.md"
license = { text = "Apache License 2.0" }
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Typing :: Typed',
]

requires-python = ">=3.7,<3.8"

dependencies = [
    "requests",
    "pandas",
    "joblib",
    "tabulate",
    "pyarrow",
    "fsspec",
    "aiohttp",
    "rich",
    "certifi",
]

[project.urls]
homepage = "https://github.com/jpmorganchase/fusion"
repository = "https://github.com/jpmorganchase/fusion"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
doc = [
    "mkdocs",
    "docutils",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocstrings-python",
    "mkdocs-autorefs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-git-revision-date-plugin",
    "mkdocs-jupyter",
    "jupyter_contrib_nbextensions",
    "mike",
    "notebook"
]

aws = [
    "s3fs"
]

gcs = [
    "gcsfs"
]

azr = [
    "adlfs"
]

polars = [
    "polars"
]

events = [
    "sseclient",
    "aiohttp-sse-client"
]

[tool.uv]
managed = true
dev-dependencies = [
    "aioresponses",
    "auditwheel; sys_platform=='linux'",
    "bump-my-version",
    "cffi; sys_platform=='darwin'",
    "freezegun",
    "ipython",
    "moto[s3]",
    "mypy",
    "pandas",
    "pytest",
    "pytest-asyncio",
    "pytest-benchmark",
    "pytest-cov",
    "pytest-mock",
    "pytest-random-order",
    "pyzmq",
    "requests-mock",
    "rich",
    "ruff",
    "toml",
    "tox",
    "tox-gh-actions",
    "twine",
    "types-requests",
    "types-tabulate",
    "types-tqdm",
    "types-python-dateutil",
    "virtualenv",
    "pytest-html",
    "jinja2",
    "nox",
    "beeprint",
    "typer",
    "pkginfo",
]

[tool.uv.pip]
link-mode = "copy"
generate-hashes = true
universal = true

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py37"

[tool.ruff.lint]
extend-select = [
    'F',     # Pyflakes
    'I',     # isort
    'N',     # pep8-naming
    'E',     # pycodestyle
    'UP',    # pyupgrade
    'YTT',   # flake8-2020
    'ASYNC', # flake8-async
    'ANN',   # flake8-annotations
    'B',     # flake8-bugbear
    'C4',    # flake8-comprehensions
    'T20',   # flake8-print
    'PYI',   # flake8-pyi
    'PT',    # flake8-pytest-style
    'Q',     # flake8-quotes
    'SIM',   # flake8-simplify
]
extend-ignore = [
    "S101",
    "F541",
    "ANN101",
    "N815",
    "N806",
    "N803",
]

[tool.ruff.lint.isort]
known-first-party = ["fusion"]

[tool.pytest.ini_options]
addopts = "--cov fusion --html .reports/py/index.html --cov-report html:.reports/py/cov --cov-report term --random-order -p no:warnings -v"
minversion = "8.0"
pythonpath = ["src", "py_tests"]
testpaths = "py_tests"
pythonfiles = "test_*.py"

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
strict = true
disallow_untyped_defs = true

[tool.coverage]
html.show_contexts = true
html.skip_covered = false

[tool.coverage.run]
parallel = true

[tool.coverage.report]
fail_under = 50
omit = [
    "py_src/fusion/_legacy/authentication.py",
    "py_src/fusion/_legacy/__init__.py"
]
exclude_lines = [
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
]

[tool.bumpversion]
current_version = "2.0.5"
parse = '(?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)(?:-(?P<release>[a-z]+)(?P<candidate>\d+))?'
serialize = [
    '{major}.{minor}.{patch}-{release}{candidate}',
    '{major}.{minor}.{patch}'
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[[tool.bumpversion.files]]
filename = "py_src/fusion/__init__.py"
