[tox]
isolated_build = true
envlist = uv, format, lint, test, doc, build, clean
uv_discovery = true
uv_seed = true
set_env = 
    PATH = {env:HOME}/.local/share/uv/python/cpython-3.7.12-linux-x86_64-gnu/bin:{env:PATH}

[testenv:uv]
allowlist_externals = uv

commands =
    uv run python --version

[testenv:test]
allowlist_externals = uv, rm, python, pytest
passenv = *
set_env =
    LD_LIBRARY_PATH = {env:HOME}/.local/share/uv/python/cpython-3.7.12-linux-x86_64-gnu/lib:$LD_LIBRARY_PATH

commands =
    rm -rf .reports
    python --version
    uv sync
    pytest {tty:--color=yes}

[testenv:format]
allowlist_externals = uv
commands =
    uv sync
    uv run ruff format py_src/fusion py_tests
    uv run ruff check --fix py_src/fusion py_tests

[testenv:lint]
allowlist_externals = uv
set_env =
    {tty:MYPY_FORCE_COLOR = 1}

commands =
    uv sync
    uv run ruff check py_src/fusion py_tests
    uv run mypy --disallow-untyped-defs py_src/fusion py_tests
    uv run ruff check py_src/fusion py_tests --ignore-noqa --exit-zero

[testenv:doc]
allowlist_externals = uv
commands_pre = uv sync --all-extras
commands =
    uv run mike deploy vtest -m "test doc build" --ignore
    uv run mike delete vtest -m "remove doc build" --ignore

[testenv:build]
allowlist_externals = uv

commands =
    uv sync
    uv build
    uv run twine check dist/*

[testenv:clean]
allowlist_externals = rm
commands =
    rm -rf {toxinidir}/dist {toxinidir}/target {toxinidir}/downloads
